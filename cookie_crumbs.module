<?php

/**
 * @file
 * General functions and hook implementations.
 */

/**
 * Implements hook_theme().
 */
function cookie_crumbs_theme($existing, $type, $theme, $path) {
  return array(
    'cookie_crumbs_ul' => array(
      'variables' => array('class' => NULL),
      'file' => 'cookie_crumbs.theme.inc',
    ),
  );
}

/**
 * Implements hook_block_info().
 */
function cookie_crumbs_block_info() {
  $blocks = array();
  $blocks['cookie_crumbs'] = array(
    'info' => t('Cookie Crumbs'),
  );

  return $blocks;
}

/**
 * Implements hook_block_configure().
 */
function cookie_crumbs_block_configure($delta='') {
  $form = array();

  // Do not continue if this isn't the cookie_crumbs block.
  if ($delta != 'cookie_crumbs') {
    return $form;
  }
  // Amount of elements shown in list.
  $form['cookie_crumbs_length'] = array(
    '#type' => 'textfield',
    '#title' => t('Links to be shown'),
    '#size' => 4,
    '#description' => t('How many items is maximum that should be shown. Defaults to 5'),
    '#default_value' => variable_get('cookie_crumbs_length', NULL),
  );
  return $form;
}

/**
 * Implements hook_block_save().
 */
function cookie_crumbs_block_save($delta = '', $edit = array()) {

  // Do not continue if this isn't the cookie_crumbs block.
  if ($delta != 'cookie_crumbs') {
    return;
  }
  // Saving the length of cookie crumbs.
  if (isset($edit['cookie_crumbs_length']['value'])) {
    variable_set('cookie_crumbs_length', $edit['cookie_crumbs_length']['value']);
  }
  else {
    variable_del('cookie_crumbs_length');
  }
}

/**
 * Implements hook_block_view().
 */
function cookie_crumbs_block_view($delta='') {
  $block = array();

  // Do not continue if this isn't the cookie_crumbs block.
  if ($delta != 'cookie_crumbs') {
    return $block;
  }
  // If the library doesn't exist, stop.
  if (!_hanselsrevenge_js_library_path()) {
    if (user_access('administer blocks')) {
      drupal_set_message(t('The Cookie Crumbs block was inserted in a region, but the library is not found.'), 'error');
    }
    return $block;
  }

  // Add the library and the configuration.
  drupal_add_js(_hanselsrevenge_js_library_path());
  $js_settings = array(
    'cookie_crumbs_class_name' => 'cookie-crumbs',
    'items_to_show' => variable_get('cookie_crumbs_length', 5),
  );
  drupal_add_js($js_settings, 'setting');
  drupal_add_js(drupal_get_path('module', 'cookie_crumbs') . '/hanselsrevenge_config.js');
  $block['content'] = theme('cookie_crumbs_ul', array('class' => $js_settings['cookie_crumbs_class_name']));

  return $block;
}

/**
 * Returns the path to the Hansels Revenge JavaScript file.
 */
function _hanselsrevenge_js_library_path() {
  $path = libraries_get_path('hanselsrevenge');

  // Check wether the library is downloaded to the libraries folder.
  if (file_exists($path . '/jquery.hanselsrevenge.js')) {
    return $path . '/jquery.hanselsrevenge.js';
  }
  return FALSE;
}